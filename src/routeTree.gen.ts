/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsIndexImport } from './routes/_layout/settings/index'
import { Route as LayoutCabinsIndexImport } from './routes/_layout/cabins/index'
import { Route as LayoutBookingsIndexImport } from './routes/_layout/bookings/index'
import { Route as LayoutBookingsBookingIdImport } from './routes/_layout/bookings/$bookingId'

// Create Virtual Routes

const LayoutUsersIndexLazyImport = createFileRoute('/_layout/users/')()
const LayoutDashboardIndexLazyImport = createFileRoute('/_layout/dashboard/')()
const LayoutAccountIndexLazyImport = createFileRoute('/_layout/account/')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutUsersIndexLazyRoute = LayoutUsersIndexLazyImport.update({
  path: '/users/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/users/index.lazy').then((d) => d.Route),
)

const LayoutDashboardIndexLazyRoute = LayoutDashboardIndexLazyImport.update({
  path: '/dashboard/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/dashboard/index.lazy').then((d) => d.Route),
)

const LayoutAccountIndexLazyRoute = LayoutAccountIndexLazyImport.update({
  path: '/account/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/account/index.lazy').then((d) => d.Route),
)

const LayoutSettingsIndexRoute = LayoutSettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/settings/index.lazy').then((d) => d.Route),
)

const LayoutCabinsIndexRoute = LayoutCabinsIndexImport.update({
  path: '/cabins/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/cabins/index.lazy').then((d) => d.Route),
)

const LayoutBookingsIndexRoute = LayoutBookingsIndexImport.update({
  path: '/bookings/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/bookings/index.lazy').then((d) => d.Route),
)

const LayoutBookingsBookingIdRoute = LayoutBookingsBookingIdImport.update({
  path: '/bookings/$bookingId',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout/bookings/$bookingId': {
      id: '/_layout/bookings/$bookingId'
      path: '/bookings/$bookingId'
      fullPath: '/bookings/$bookingId'
      preLoaderRoute: typeof LayoutBookingsBookingIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/bookings/': {
      id: '/_layout/bookings/'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof LayoutBookingsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/cabins/': {
      id: '/_layout/cabins/'
      path: '/cabins'
      fullPath: '/cabins'
      preLoaderRoute: typeof LayoutCabinsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings/': {
      id: '/_layout/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/account/': {
      id: '/_layout/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof LayoutAccountIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardIndexLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/users/': {
      id: '/_layout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof LayoutUsersIndexLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutIndexRoute,
    LayoutBookingsBookingIdRoute,
    LayoutBookingsIndexRoute,
    LayoutCabinsIndexRoute,
    LayoutSettingsIndexRoute,
    LayoutAccountIndexLazyRoute,
    LayoutDashboardIndexLazyRoute,
    LayoutUsersIndexLazyRoute,
  }),
  LoginIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/bookings/$bookingId",
        "/_layout/bookings/",
        "/_layout/cabins/",
        "/_layout/settings/",
        "/_layout/account/",
        "/_layout/dashboard/",
        "/_layout/users/"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_layout/bookings/$bookingId": {
      "filePath": "_layout/bookings/$bookingId.tsx",
      "parent": "/_layout"
    },
    "/_layout/bookings/": {
      "filePath": "_layout/bookings/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/cabins/": {
      "filePath": "_layout/cabins/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings/": {
      "filePath": "_layout/settings/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/account/": {
      "filePath": "_layout/account/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/dashboard/": {
      "filePath": "_layout/dashboard/index.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/users/": {
      "filePath": "_layout/users/index.lazy.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
