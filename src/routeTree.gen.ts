/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthLayoutImport } from './routes/_auth/_layout'
import { Route as AuthLayoutIndexImport } from './routes/_auth/_layout/index'
import { Route as AuthLayoutSettingsIndexImport } from './routes/_auth/_layout/settings/index'
import { Route as AuthLayoutDashboardIndexImport } from './routes/_auth/_layout/dashboard/index'
import { Route as AuthLayoutCabinsIndexImport } from './routes/_auth/_layout/cabins/index'
import { Route as AuthLayoutBookingsIndexImport } from './routes/_auth/_layout/bookings/index'
import { Route as AuthLayoutCheckinBookingIdImport } from './routes/_auth/_layout/checkin/$bookingId'
import { Route as AuthLayoutBookingsBookingIdImport } from './routes/_auth/_layout/bookings/$bookingId'

// Create Virtual Routes

const AuthLayoutUsersIndexLazyImport = createFileRoute(
  '/_auth/_layout/users/',
)()
const AuthLayoutAccountIndexLazyImport = createFileRoute(
  '/_auth/_layout/account/',
)()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLayoutIndexRoute = AuthLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutUsersIndexLazyRoute = AuthLayoutUsersIndexLazyImport.update({
  path: '/users/',
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import('./routes/_auth/_layout/users/index.lazy').then((d) => d.Route),
)

const AuthLayoutAccountIndexLazyRoute = AuthLayoutAccountIndexLazyImport.update(
  {
    path: '/account/',
    getParentRoute: () => AuthLayoutRoute,
  } as any,
).lazy(() =>
  import('./routes/_auth/_layout/account/index.lazy').then((d) => d.Route),
)

const AuthLayoutSettingsIndexRoute = AuthLayoutSettingsIndexImport.update({
  path: '/settings/',
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import('./routes/_auth/_layout/settings/index.lazy').then((d) => d.Route),
)

const AuthLayoutDashboardIndexRoute = AuthLayoutDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import('./routes/_auth/_layout/dashboard/index.lazy').then((d) => d.Route),
)

const AuthLayoutCabinsIndexRoute = AuthLayoutCabinsIndexImport.update({
  path: '/cabins/',
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import('./routes/_auth/_layout/cabins/index.lazy').then((d) => d.Route),
)

const AuthLayoutBookingsIndexRoute = AuthLayoutBookingsIndexImport.update({
  path: '/bookings/',
  getParentRoute: () => AuthLayoutRoute,
} as any).lazy(() =>
  import('./routes/_auth/_layout/bookings/index.lazy').then((d) => d.Route),
)

const AuthLayoutCheckinBookingIdRoute = AuthLayoutCheckinBookingIdImport.update(
  {
    path: '/checkin/$bookingId',
    getParentRoute: () => AuthLayoutRoute,
  } as any,
)

const AuthLayoutBookingsBookingIdRoute =
  AuthLayoutBookingsBookingIdImport.update({
    path: '/bookings/$bookingId',
    getParentRoute: () => AuthLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_layout': {
      id: '/_auth/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthImport
    }
    '/_auth/_layout/': {
      id: '/_auth/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthLayoutIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/bookings/$bookingId': {
      id: '/_auth/_layout/bookings/$bookingId'
      path: '/bookings/$bookingId'
      fullPath: '/bookings/$bookingId'
      preLoaderRoute: typeof AuthLayoutBookingsBookingIdImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/checkin/$bookingId': {
      id: '/_auth/_layout/checkin/$bookingId'
      path: '/checkin/$bookingId'
      fullPath: '/checkin/$bookingId'
      preLoaderRoute: typeof AuthLayoutCheckinBookingIdImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/bookings/': {
      id: '/_auth/_layout/bookings/'
      path: '/bookings'
      fullPath: '/bookings'
      preLoaderRoute: typeof AuthLayoutBookingsIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/cabins/': {
      id: '/_auth/_layout/cabins/'
      path: '/cabins'
      fullPath: '/cabins'
      preLoaderRoute: typeof AuthLayoutCabinsIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/dashboard/': {
      id: '/_auth/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthLayoutDashboardIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/settings/': {
      id: '/_auth/_layout/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthLayoutSettingsIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/account/': {
      id: '/_auth/_layout/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthLayoutAccountIndexLazyImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/users/': {
      id: '/_auth/_layout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthLayoutUsersIndexLazyImport
      parentRoute: typeof AuthLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthLayoutRoute: AuthLayoutRoute.addChildren({
      AuthLayoutIndexRoute,
      AuthLayoutBookingsBookingIdRoute,
      AuthLayoutCheckinBookingIdRoute,
      AuthLayoutBookingsIndexRoute,
      AuthLayoutCabinsIndexRoute,
      AuthLayoutDashboardIndexRoute,
      AuthLayoutSettingsIndexRoute,
      AuthLayoutAccountIndexLazyRoute,
      AuthLayoutUsersIndexLazyRoute,
    }),
  }),
  LoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/_layout"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/_layout": {
      "filePath": "_auth/_layout.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_layout/",
        "/_auth/_layout/bookings/$bookingId",
        "/_auth/_layout/checkin/$bookingId",
        "/_auth/_layout/bookings/",
        "/_auth/_layout/cabins/",
        "/_auth/_layout/dashboard/",
        "/_auth/_layout/settings/",
        "/_auth/_layout/account/",
        "/_auth/_layout/users/"
      ]
    },
    "/_auth/_layout/": {
      "filePath": "_auth/_layout/index.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/bookings/$bookingId": {
      "filePath": "_auth/_layout/bookings/$bookingId.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/checkin/$bookingId": {
      "filePath": "_auth/_layout/checkin/$bookingId.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/bookings/": {
      "filePath": "_auth/_layout/bookings/index.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/cabins/": {
      "filePath": "_auth/_layout/cabins/index.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/dashboard/": {
      "filePath": "_auth/_layout/dashboard/index.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/settings/": {
      "filePath": "_auth/_layout/settings/index.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/account/": {
      "filePath": "_auth/_layout/account/index.lazy.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/users/": {
      "filePath": "_auth/_layout/users/index.lazy.tsx",
      "parent": "/_auth/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
